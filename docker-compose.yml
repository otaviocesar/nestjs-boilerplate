version: "3.7"
 
services:
  nestjs-aliansce-node:
    container_name: aliansce-node-server
    build:
        context: .
        target: development
        dockerfile: Dockerfile-dev
        args:
          - NODE_ENV=${NODE_ENV}    
    environment:
      SERVICE_DB_HOST: ${DATABASE_HOST}:${DATABASE_PORT}
      SERVICE_DB_USER: ${DATABASE_USERNAME}
      SERVICE_DB_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    tty: true   
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules    
    restart: unless-stopped
    command: npm run start:dev
    networks:
      - nesjs-network
    depends_on:
      - "mongo"

  nestjs-aliansce-node-integration:
    container_name: aliansce-node-server-integration
    build:
        context: .
        target: development
        dockerfile: Dockerfile-dev
        args:
          - NODE_ENV=${NODE_ENV}    
    environment:
      SERVICE_DB_HOST: ${DATABASE_HOST}:${DATABASE_PORT}
      SERVICE_DB_USER: ${DATABASE_USERNAME}
      SERVICE_DB_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    tty: true   
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules    
    command: npm run test:integration
    networks:
      - nesjs-network
    depends_on:
      - "mongo"    

  nestjs-aliansce-node-test:
    container_name: aliansce-node-server-test
    build:
        context: .
        target: development
        dockerfile: Dockerfile-dev
        args:
          - NODE_ENV=${NODE_ENV}    
    environment:
      SERVICE_DB_HOST: ${DATABASE_HOST}:${DATABASE_PORT}
      SERVICE_DB_USER: ${DATABASE_USERNAME}
      SERVICE_DB_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    tty: true   
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules    
    command: npm run test
    networks:
      - nesjs-network
    depends_on:
      - "mongo"  

  nestjs-aliansce-node-cov:
    container_name: aliansce-node-server-cov
    build:
        context: .
        target: development
        dockerfile: Dockerfile-dev
        args:
          - NODE_ENV=${NODE_ENV}    
    environment:
      SERVICE_DB_HOST: ${DATABASE_HOST}:${DATABASE_PORT}
      SERVICE_DB_USER: ${DATABASE_USERNAME}
      SERVICE_DB_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    tty: true  
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules    
    command: npm run test:cov
    networks:
      - nesjs-network
    depends_on:
      - "mongo"

  mongo:
    container_name: aliansce-mongo-server
    image: mongo
    environment:
      MONGO_INITDB_ROOT_DATABASE: root
      MONGO_INITDB_DATABASE: ${DATABASE_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - ./docker/mongo-init:/docker-entrypoint-initdb.d/:ro
      - ./docker/local/volumes/mongodb:/data/db
    restart: unless-stopped
    networks:
      - nesjs-network

networks: 
    nesjs-network:
      driver: bridge  